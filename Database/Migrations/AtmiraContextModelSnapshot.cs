// <auto-generated />
using System;
using Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Database.Migrations
{
    [DbContext(typeof(AtmiraContext))]
    partial class AtmiraContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Dto.Models.Countries", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Timezone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Dto.Models.DvdCountries", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Timezone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DvdCountries");
                });

            modelBuilder.Entity("Dto.Models.Externals", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Imdb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Thetvdb")
                        .HasColumnType("int");

                    b.Property<int?>("Tvrage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Externals");
                });

            modelBuilder.Entity("Dto.Models.Images", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Medium")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Original")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TvShowId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Dto.Models.Links", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PreviousepisodeHref")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelfHref")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TvShowId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Links");
                });

            modelBuilder.Entity("Dto.Models.Networks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficialSite")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Networks");
                });

            modelBuilder.Entity("Dto.Models.Previousepisodes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Href")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LinksId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LinksId");

                    b.ToTable("Previousepisodes");
                });

            modelBuilder.Entity("Dto.Models.Ratings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Average")
                        .HasColumnType("float");

                    b.Property<int?>("TvShowId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("Dto.Models.Schedules", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TvShowId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("Dto.Models.Selves", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Href")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LinksId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LinksId");

                    b.ToTable("Selves");
                });

            modelBuilder.Entity("Dto.Models.TvShows", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AverageRuntime")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Ended")
                        .HasColumnType("datetime");

                    b.Property<int?>("ExternalId")
                        .HasColumnType("int");

                    b.Property<int?>("ImagesId")
                        .HasColumnType("int");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LinksId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NetworkId")
                        .HasColumnType("int");

                    b.Property<string>("OfficialSite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Premiered")
                        .HasColumnType("datetime");

                    b.Property<int?>("RatingsId")
                        .HasColumnType("int");

                    b.Property<int?>("Runtime")
                        .HasColumnType("int");

                    b.Property<int?>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Updated")
                        .HasColumnType("bigint");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExternalId");

                    b.HasIndex("ImagesId");

                    b.HasIndex("LinksId");

                    b.HasIndex("NetworkId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("TvShows");
                });

            modelBuilder.Entity("Dto.Models.WebChannels", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficialSite")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("WebChannels");
                });

            modelBuilder.Entity("Dto.Models.Networks", b =>
                {
                    b.HasOne("Dto.Models.Countries", "Country")
                        .WithMany("Networks")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK__Networks__Countr__2F10007B");
                });

            modelBuilder.Entity("Dto.Models.Previousepisodes", b =>
                {
                    b.HasOne("Dto.Models.Links", "Links")
                        .WithMany("Previousepisodes")
                        .HasForeignKey("LinksId")
                        .HasConstraintName("FK__Previouse__Links__403A8C7D");
                });

            modelBuilder.Entity("Dto.Models.Selves", b =>
                {
                    b.HasOne("Dto.Models.Links", "Links")
                        .WithMany("Selves")
                        .HasForeignKey("LinksId")
                        .HasConstraintName("FK__Selves__LinksId__3D5E1FD2");
                });

            modelBuilder.Entity("Dto.Models.TvShows", b =>
                {
                    b.HasOne("Dto.Models.Externals", "Externals")
                        .WithMany("TvShows")
                        .HasForeignKey("ExternalId")
                        .HasConstraintName("FK__Externals__TvSho__34C8D9D1");

                    b.HasOne("Dto.Models.Ratings", "Ratings")
                        .WithMany("TvShows")
                        .HasForeignKey("ExternalId")
                        .HasConstraintName("FK__Ratings__TvShowI__45F365D3");

                    b.HasOne("Dto.Models.Images", "Images")
                        .WithMany("TvShows")
                        .HasForeignKey("ImagesId")
                        .HasConstraintName("FK__Images__TvShowId__37A5467C");

                    b.HasOne("Dto.Models.Links", "Links")
                        .WithMany("TvShows")
                        .HasForeignKey("LinksId")
                        .HasConstraintName("FK__Links__TvShowId__3A81B327");

                    b.HasOne("Dto.Models.Networks", "Network")
                        .WithMany("TvShows")
                        .HasForeignKey("NetworkId")
                        .HasConstraintName("FK__TvShows__Network__31EC6D26");

                    b.HasOne("Dto.Models.Schedules", "Schedules")
                        .WithMany("TvShows")
                        .HasForeignKey("ScheduleId")
                        .HasConstraintName("FK__Schedules__TvSho__4316F928");
                });

            modelBuilder.Entity("Dto.Models.WebChannels", b =>
                {
                    b.HasOne("Dto.Models.Countries", "Country")
                        .WithMany("WebChannels")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK__WebChanne__Count__48CFD27E");
                });
#pragma warning restore 612, 618
        }
    }
}
